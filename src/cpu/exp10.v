
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module exp10(
	//////////// CLOCK //////////
	input 		          		CLOCK2_50,
	input 		          		CLOCK3_50,
	input 		          		CLOCK4_50,
	input 		          		CLOCK_50,

	//////////// KEY //////////
	input 		     [3:0]		KEY,

	//////////// LED //////////
	output		     [9:0]		LEDR,

	//////////// Seg7 //////////
	output		     [6:0]		HEX0,
	output		     [6:0]		HEX1,
	output		     [6:0]		HEX2,
	output		     [6:0]		HEX3,
	output		     [6:0]		HEX4,
	output		     [6:0]		HEX5
);



//=======================================================
//  REG/WIRE declarations
//=======================================================
	wire clk, iclk, rdclk, wrclk, WrEn;
	wire [31: 0] i_data;
	wire [31: 0] d_dataout;
	wire [31: 0] d_datain;
	
	wire [31: 0] i_addr;
	wire [31: 0] d_addr;
	
	wire [ 2: 0] MemOp;
//=======================================================
//  Structural coding
//=======================================================

	clkgen #(5000000) cpu_clk(
		CLOCK_50, ~KEY[0],
		1'b1, clk);

	rv32is_pipe2 cpu(
		.clock(clk),
		.imemclk(iclk),
		.dmemrdclk(rdclk),
		.dmemwrclk(wrclk),
		.reset(~KEY[0]),
	   .imemdataout(i_data),
	   .dmemdataout(d_dataout),

	   .dmemwe(WrEn),
	   .imemaddr(i_addr),
	   .dmemaddr(d_addr),
	   .dmemdatain(d_datain),
	   .dmemop(MemOp));
	
	ram1port instr_ram(
		.clock(iclk),
		.address(i_addr[17: 2]),
		.wren(0), .data(0), // no write opreations
		.q(i_data));
		
	mem_data data_ram(
		.rdclk(rdclk),
		.wrclk(wrclk),
		.addr(d_addr),
		
		.datain(d_datain),
		.dataout(d_dataout),
		
		.memop(MemOp),
		.we(WrEn));
	
endmodule
